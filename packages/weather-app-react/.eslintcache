[{"E:\\React\\weather-app-react\\src\\index.tsx":"1","E:\\React\\weather-app-react\\src\\reportWebVitals.ts":"2","E:\\React\\weather-app-react\\src\\App.tsx":"3","E:\\React\\weather-app-react\\src\\components\\Main.tsx":"4","E:\\React\\weather-app-react\\src\\components\\WeatherContext.tsx":"5","E:\\React\\weather-app-react\\src\\utils.ts":"6","E:\\React\\weather-app-react\\src\\components\\SearchControls.tsx":"7","E:\\React\\weather-app-react\\src\\components\\Loader.tsx":"8","E:\\React\\weather-app-react\\src\\components\\Navbar.tsx":"9","E:\\React\\weather-app-react\\src\\views\\Home.tsx":"10","E:\\React\\weather-app-react\\src\\views\\Daily.tsx":"11","E:\\React\\weather-app-react\\src\\consts.ts":"12","E:\\React\\weather-app-react\\src\\components\\daily\\DaysList.tsx":"13","E:\\React\\weather-app-react\\src\\components\\home\\AdditionalInfo.tsx":"14","E:\\React\\weather-app-react\\src\\components\\home\\MainInfo.tsx":"15","E:\\React\\weather-app-react\\src\\components\\daily\\HourlyWeather.tsx":"16","E:\\React\\weather-app-react\\src\\components\\daily\\MainInfo.tsx":"17","E:\\React\\weather-app-react\\src\\components\\daily\\Day.tsx":"18","E:\\React\\weather-app-react\\src\\components\\daily\\HourlyWeatherItem.tsx":"19","E:\\React\\weather-app-react\\src\\components\\home\\hourlyWeather\\HourlyWeather.tsx":"20","E:\\React\\weather-app-react\\src\\components\\home\\hourlyWeather\\HourlyWeatherTomorrow.tsx":"21","E:\\React\\weather-app-react\\src\\components\\home\\hourlyWeather\\HourlyWeatherToday.tsx":"22","E:\\React\\weather-app-react\\src\\components\\home\\hourlyWeather\\HourlyWeatherItem.tsx":"23"},{"size":517,"mtime":1610639257506,"results":"24","hashOfConfig":"25"},{"size":440,"mtime":1610639257507,"results":"26","hashOfConfig":"25"},{"size":256,"mtime":1610639257497,"results":"27","hashOfConfig":"25"},{"size":2573,"mtime":1610742822662,"results":"28","hashOfConfig":"25"},{"size":1843,"mtime":1610742582779,"results":"29","hashOfConfig":"25"},{"size":1638,"mtime":1610744048197,"results":"30","hashOfConfig":"25"},{"size":1478,"mtime":1610743830531,"results":"31","hashOfConfig":"25"},{"size":231,"mtime":1610639257503,"results":"32","hashOfConfig":"25"},{"size":661,"mtime":1610639257503,"results":"33","hashOfConfig":"25"},{"size":1133,"mtime":1610807319132,"results":"34","hashOfConfig":"25"},{"size":1336,"mtime":1610742647701,"results":"35","hashOfConfig":"25"},{"size":294,"mtime":1610639257506,"results":"36","hashOfConfig":"25"},{"size":930,"mtime":1610743163791,"results":"37","hashOfConfig":"25"},{"size":1531,"mtime":1610742921699,"results":"38","hashOfConfig":"25"},{"size":721,"mtime":1610807435455,"results":"39","hashOfConfig":"25"},{"size":529,"mtime":1610744297651,"results":"40","hashOfConfig":"25"},{"size":1781,"mtime":1610743116187,"results":"41","hashOfConfig":"25"},{"size":645,"mtime":1610743205735,"results":"42","hashOfConfig":"25"},{"size":359,"mtime":1610639257505,"results":"43","hashOfConfig":"25"},{"size":1184,"mtime":1610720970056,"results":"44","hashOfConfig":"25"},{"size":887,"mtime":1610744363016,"results":"45","hashOfConfig":"25"},{"size":672,"mtime":1610742724891,"results":"46","hashOfConfig":"25"},{"size":609,"mtime":1610719782750,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"qiy7k4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"E:\\React\\weather-app-react\\src\\index.tsx",[],["97","98"],"E:\\React\\weather-app-react\\src\\reportWebVitals.ts",[],"E:\\React\\weather-app-react\\src\\App.tsx",[],"E:\\React\\weather-app-react\\src\\components\\Main.tsx",["99"],"import { SearchControls } from \"./SearchControls\";\r\nimport { Home } from \"../views/Home\";\r\nimport { Daily } from \"../views/Daily\";\r\nimport { Loader } from \"./Loader\";\r\nimport { Navbar } from \"./Navbar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { useContext, useEffect, memo } from \"react\";\r\nimport { WeatherContext } from \"./WeatherContext\";\r\n\r\nimport {\r\n  getCurrentWeather,\r\n  getDailyWeather,\r\n  getTimezone,\r\n  getCityNameByCoordinates\r\n} from \"../utils\";\r\n\r\nexport const Main = memo(() => {\r\n  const {\r\n    error,\r\n    loading,\r\n    setLoading,\r\n    setError,\r\n    setCurrentWeather,\r\n    setDailyWeather,\r\n    setTimezone,\r\n    setDailyActiveDayIndex\r\n  } = useContext(WeatherContext);\r\n\r\n  const search = async (city: string) => {\r\n    setLoading!(true);\r\n    try {\r\n      const currentWeather = await getCurrentWeather(city);\r\n      setCurrentWeather!(currentWeather);\r\n\r\n      const { coord } = currentWeather;\r\n      setDailyWeather!(await getDailyWeather(coord.lat, coord.lon));\r\n\r\n      const { countryName, formatted } = await getTimezone(\r\n        coord.lat,\r\n        coord.lon\r\n      );\r\n      setTimezone!({ countryName, hour: Number(formatted.substring(11, 13)) });\r\n\r\n      setError!(false);\r\n      setDailyActiveDayIndex!(0);\r\n    } catch {\r\n      setError!(true);\r\n    }\r\n    setLoading!(false);\r\n  };\r\n\r\n  const searchByLocation = async () => {\r\n    setLoading!(true);\r\n    return navigator.geolocation.getCurrentPosition(async ({ coords }) => {\r\n      const data = await getCityNameByCoordinates(\r\n        coords.latitude,\r\n        coords.longitude\r\n      );\r\n\r\n      search(data.address.city);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    search(\"London\");\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error\">\r\n        <SearchControls search={search} searchByLocation={searchByLocation} />\r\n        <div className=\"error__text\">\r\n          Niestety <span className=\"not-found\">nie znaleziono</span> tego, czego\r\n          szukasz lub wystąpił <span className=\"error\">błąd</span>, spróbuj\r\n          ponownie!\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <SearchControls search={search} searchByLocation={searchByLocation} />\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/daily\" exact component={Daily} />\r\n        </Switch>\r\n        <Navbar />\r\n      </Router>\r\n    </div>\r\n  );\r\n});\r\n","E:\\React\\weather-app-react\\src\\components\\WeatherContext.tsx",[],"E:\\React\\weather-app-react\\src\\utils.ts",[],"E:\\React\\weather-app-react\\src\\components\\SearchControls.tsx",[],"E:\\React\\weather-app-react\\src\\components\\Loader.tsx",[],"E:\\React\\weather-app-react\\src\\components\\Navbar.tsx",[],"E:\\React\\weather-app-react\\src\\views\\Home.tsx",[],"E:\\React\\weather-app-react\\src\\views\\Daily.tsx",["100"],"import { useContext, useState, useEffect, memo } from \"react\";\r\nimport { WeatherContext } from \"../components/WeatherContext\";\r\nimport { MainInfo } from \"../components/daily/MainInfo\";\r\nimport { HourlyWeather } from \"../components/daily/HourlyWeather\";\r\nimport { DaysList } from \"../components/daily/DaysList\";\r\nimport { getListOfDays } from \"../utils\";\r\n\r\nexport const Daily = memo(() => {\r\n  const { dailyWeather, dailyActiveDayIndex } = useContext(WeatherContext);\r\n\r\n  const [activeDay, setActiveDay] = useState(\r\n    dailyWeather!.daily[dailyActiveDayIndex!]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setActiveDay(dailyWeather!.daily[dailyActiveDayIndex!]);\r\n  }, [dailyActiveDayIndex]);\r\n\r\n  const mainData = {\r\n    icon: activeDay.weather[0].icon,\r\n    min_temp: activeDay.temp.min,\r\n    max_temp: activeDay.temp.max,\r\n    day: getListOfDays()[dailyActiveDayIndex!]\r\n  };\r\n  const additionalData = {\r\n    wind: activeDay.wind_speed,\r\n    pressure: activeDay.pressure,\r\n    humidity: activeDay.humidity,\r\n    cloudiness: activeDay.clouds\r\n  };\r\n\r\n  const { morn, day, eve, night } = activeDay.temp;\r\n\r\n  return (\r\n    <div className=\"daily\">\r\n      <MainInfo main={mainData} additional={additionalData} />\r\n      <HourlyWeather temp={{ morn, day, eve, night }} />\r\n      <DaysList weather={dailyWeather!.daily} />\r\n    </div>\r\n  );\r\n});\r\n","E:\\React\\weather-app-react\\src\\consts.ts",[],"E:\\React\\weather-app-react\\src\\components\\daily\\DaysList.tsx",[],"E:\\React\\weather-app-react\\src\\components\\home\\AdditionalInfo.tsx",[],"E:\\React\\weather-app-react\\src\\components\\home\\MainInfo.tsx",[],"E:\\React\\weather-app-react\\src\\components\\daily\\HourlyWeather.tsx",[],"E:\\React\\weather-app-react\\src\\components\\daily\\MainInfo.tsx",[],"E:\\React\\weather-app-react\\src\\components\\daily\\Day.tsx",[],"E:\\React\\weather-app-react\\src\\components\\daily\\HourlyWeatherItem.tsx",[],"E:\\React\\weather-app-react\\src\\components\\home\\hourlyWeather\\HourlyWeather.tsx",[],"E:\\React\\weather-app-react\\src\\components\\home\\hourlyWeather\\HourlyWeatherTomorrow.tsx",[],"E:\\React\\weather-app-react\\src\\components\\home\\hourlyWeather\\HourlyWeatherToday.tsx",[],"E:\\React\\weather-app-react\\src\\components\\home\\hourlyWeather\\HourlyWeatherItem.tsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":67,"column":6,"nodeType":"107","endLine":67,"endColumn":8,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":17,"column":6,"nodeType":"107","endLine":17,"endColumn":27,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has a missing dependency: 'dailyWeather'. Either include it or remove the dependency array.",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [search]",{"range":"119","text":"120"},"Update the dependencies array to be: [dailyActiveDayIndex, dailyWeather]",{"range":"121","text":"122"},[1729,1731],"[search]",[661,682],"[dailyActiveDayIndex, dailyWeather]"]