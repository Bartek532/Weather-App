[{"E:\\Apps\\Weather App\\packages\\react\\src\\index.tsx":"1","E:\\Apps\\Weather App\\packages\\react\\src\\reportWebVitals.ts":"2","E:\\Apps\\Weather App\\packages\\react\\src\\App.tsx":"3","E:\\Apps\\Weather App\\packages\\react\\src\\context\\WeatherContext.tsx":"4","E:\\Apps\\Weather App\\packages\\react\\src\\components\\Main.tsx":"5","E:\\Apps\\Weather App\\packages\\react\\src\\utils.ts":"6","E:\\Apps\\Weather App\\packages\\react\\src\\components\\Navbar.tsx":"7","E:\\Apps\\Weather App\\packages\\react\\src\\components\\Loader.tsx":"8","E:\\Apps\\Weather App\\packages\\react\\src\\components\\Error.tsx":"9","E:\\Apps\\Weather App\\packages\\react\\src\\components\\SearchControls.tsx":"10","E:\\Apps\\Weather App\\packages\\react\\src\\views\\Daily.tsx":"11","E:\\Apps\\Weather App\\packages\\react\\src\\views\\Home.tsx":"12","E:\\Apps\\Weather App\\packages\\react\\src\\consts.ts":"13","E:\\Apps\\Weather App\\packages\\react\\src\\components\\daily\\HourlyWeather.tsx":"14","E:\\Apps\\Weather App\\packages\\react\\src\\components\\daily\\MainInfo.tsx":"15","E:\\Apps\\Weather App\\packages\\react\\src\\components\\home\\MainInfo.tsx":"16","E:\\Apps\\Weather App\\packages\\react\\src\\components\\daily\\DaysList.tsx":"17","E:\\Apps\\Weather App\\packages\\react\\src\\components\\home\\AdditionalInfo.tsx":"18","E:\\Apps\\Weather App\\packages\\react\\src\\components\\home\\hourlyWeather\\HourlyWeather.tsx":"19","E:\\Apps\\Weather App\\packages\\react\\src\\components\\daily\\HourlyWeatherItem.tsx":"20","E:\\Apps\\Weather App\\packages\\react\\src\\components\\daily\\Day.tsx":"21","E:\\Apps\\Weather App\\packages\\react\\src\\components\\home\\hourlyWeather\\HourlyWeatherTomorrow.tsx":"22","E:\\Apps\\Weather App\\packages\\react\\src\\components\\home\\hourlyWeather\\HourlyWeatherToday.tsx":"23","E:\\Apps\\Weather App\\packages\\react\\src\\components\\home\\hourlyWeather\\HourlyWeatherItem.tsx":"24"},{"size":517,"mtime":1611228809117,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1611228805792,"results":"27","hashOfConfig":"26"},{"size":253,"mtime":1611228811154,"results":"28","hashOfConfig":"26"},{"size":2170,"mtime":1611228811218,"results":"29","hashOfConfig":"26"},{"size":2677,"mtime":1611228811184,"results":"30","hashOfConfig":"26"},{"size":2680,"mtime":1611228811724,"results":"31","hashOfConfig":"26"},{"size":661,"mtime":1611228808477,"results":"32","hashOfConfig":"26"},{"size":231,"mtime":1611228809341,"results":"33","hashOfConfig":"26"},{"size":281,"mtime":1611228811178,"results":"34","hashOfConfig":"26"},{"size":1461,"mtime":1611228811439,"results":"35","hashOfConfig":"26"},{"size":1216,"mtime":1611228811235,"results":"36","hashOfConfig":"26"},{"size":1198,"mtime":1611228811523,"results":"37","hashOfConfig":"26"},{"size":294,"mtime":1611228806027,"results":"38","hashOfConfig":"26"},{"size":537,"mtime":1611228811458,"results":"39","hashOfConfig":"26"},{"size":2007,"mtime":1611228811705,"results":"40","hashOfConfig":"26"},{"size":842,"mtime":1611228811711,"results":"41","hashOfConfig":"26"},{"size":1015,"mtime":1611228811452,"results":"42","hashOfConfig":"26"},{"size":1733,"mtime":1611301590437,"results":"43","hashOfConfig":"26"},{"size":1191,"mtime":1611228811492,"results":"44","hashOfConfig":"26"},{"size":367,"mtime":1611228811463,"results":"45","hashOfConfig":"26"},{"size":696,"mtime":1611228811698,"results":"46","hashOfConfig":"26"},{"size":943,"mtime":1611228811513,"results":"47","hashOfConfig":"26"},{"size":730,"mtime":1611228811505,"results":"48","hashOfConfig":"26"},{"size":668,"mtime":1611228811717,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ebqprd",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Apps\\Weather App\\packages\\react\\src\\index.tsx",[],["101","102"],"E:\\Apps\\Weather App\\packages\\react\\src\\reportWebVitals.ts",[],"E:\\Apps\\Weather App\\packages\\react\\src\\App.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\context\\WeatherContext.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\Main.tsx",["103"],"import { SearchControls } from \"./SearchControls\";\r\nimport { Home } from \"../views/Home\";\r\nimport { Daily } from \"../views/Daily\";\r\nimport { Loader } from \"./Loader\";\r\nimport { Navbar } from \"./Navbar\";\r\nimport { Error } from \"./Error\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { useContext, useEffect, memo } from \"react\";\r\nimport { WeatherContext } from \"../context/WeatherContext\";\r\n\r\nimport {\r\n  getCurrentWeather,\r\n  getDailyWeather,\r\n  getTimezone,\r\n  getCityNameByCoordinates\r\n} from \"../utils\";\r\n\r\nexport const Main = memo(() => {\r\n  const {\r\n    error,\r\n    loading,\r\n    setLoading,\r\n    setError,\r\n    setCurrentWeather,\r\n    setDailyWeather,\r\n    setTimezone,\r\n    setCurrentSelectedDayIndex\r\n  } = useContext(WeatherContext);\r\n\r\n  const search = async (city: string) => {\r\n    if (!city.trim().length) {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const currentWeather = await getCurrentWeather(city);\r\n      setCurrentWeather(currentWeather);\r\n\r\n      const { coord } = currentWeather;\r\n      setDailyWeather(await getDailyWeather(coord.lat, coord.lon));\r\n\r\n      const { countryName, formatted } = await getTimezone(\r\n        coord.lat,\r\n        coord.lon\r\n      );\r\n      setTimezone({ countryName, hour: Number(formatted.substring(11, 13)) });\r\n\r\n      setError(false);\r\n      setCurrentSelectedDayIndex(0);\r\n    } catch {\r\n      setError(true);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const searchByLocation = async () => {\r\n    setLoading(true);\r\n\r\n    if (!(\"geolocation\" in navigator)) {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    return navigator.geolocation.getCurrentPosition(\r\n      async ({ coords }) => {\r\n        const data = await getCityNameByCoordinates(\r\n          coords.latitude,\r\n          coords.longitude\r\n        );\r\n\r\n        search(data.address.city);\r\n      },\r\n      () => {\r\n        setLoading(false);\r\n        setError(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    search(\"London\");\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error__wrapper\">\r\n        <SearchControls search={search} searchByLocation={searchByLocation} />\r\n        <Error />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <SearchControls search={search} searchByLocation={searchByLocation} />\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/daily\" exact component={Daily} />\r\n        </Switch>\r\n        <Navbar />\r\n      </Router>\r\n    </div>\r\n  );\r\n});\r\n","E:\\Apps\\Weather App\\packages\\react\\src\\utils.ts",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\Navbar.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\Loader.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\Error.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\SearchControls.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\views\\Daily.tsx",["104"],"import { useContext, useState, useEffect, memo } from \"react\";\r\nimport { WeatherContext } from \"../context/WeatherContext\";\r\nimport { MainInfo } from \"../components/daily/MainInfo\";\r\nimport { HourlyWeather } from \"../components/daily/HourlyWeather\";\r\nimport { DaysList } from \"../components/daily/DaysList\";\r\nimport { getWeatherInfoAboutSelectedDay } from \"../utils\";\r\n\r\nexport const Daily = memo(() => {\r\n  const { dailyWeather, currentSelectedDayIndex } = useContext(WeatherContext);\r\n\r\n  const [\r\n    { mainData, additionalData, temperature },\r\n    setSelectedDayInfo\r\n  ] = useState(\r\n    getWeatherInfoAboutSelectedDay(currentSelectedDayIndex, dailyWeather!.daily)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setSelectedDayInfo(\r\n      getWeatherInfoAboutSelectedDay(\r\n        currentSelectedDayIndex,\r\n        dailyWeather!.daily\r\n      )\r\n    );\r\n  }, [currentSelectedDayIndex]);\r\n\r\n  return (\r\n    <div className=\"daily\">\r\n      <div className=\"daily__main\">\r\n        <MainInfo main={mainData} additional={additionalData} />\r\n      </div>\r\n      <div className=\"daily__additional\">\r\n        <HourlyWeather temp={temperature} />\r\n        <DaysList weather={dailyWeather!.daily} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","E:\\Apps\\Weather App\\packages\\react\\src\\views\\Home.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\consts.ts",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\daily\\HourlyWeather.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\daily\\MainInfo.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\home\\MainInfo.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\daily\\DaysList.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\home\\AdditionalInfo.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\home\\hourlyWeather\\HourlyWeather.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\daily\\HourlyWeatherItem.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\daily\\Day.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\home\\hourlyWeather\\HourlyWeatherTomorrow.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\home\\hourlyWeather\\HourlyWeatherToday.tsx",[],"E:\\Apps\\Weather App\\packages\\react\\src\\components\\home\\hourlyWeather\\HourlyWeatherItem.tsx",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":85,"column":6,"nodeType":"111","endLine":85,"endColumn":8,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":25,"column":6,"nodeType":"111","endLine":25,"endColumn":31,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has a missing dependency: 'dailyWeather'. Either include it or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [search]",{"range":"123","text":"124"},"Update the dependencies array to be: [currentSelectedDayIndex, dailyWeather]",{"range":"125","text":"126"},[2045,2047],"[search]",[849,874],"[currentSelectedDayIndex, dailyWeather]"]